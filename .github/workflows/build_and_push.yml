name: Build and Push Shield Image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Black formatting check
        run: |
          black --check --diff .
        continue-on-error: true

      - name: Run flake8 linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true

      - name: Run pytest with coverage
        run: |
          pytest -v --cov=. --cov-report=term-missing --cov-report=xml
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  publish:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> "$GITHUB_OUTPUT"

      - name: List files
        shell: bash
        run: ls -la

      - name: Log in to ghcr
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build .\
            -t ghcr.io/${{ github.repository_owner }}/dc-shield:${{ steps.extract_branch.outputs.branch }}

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/dc-shield:${{ steps.extract_branch.outputs.branch }}
